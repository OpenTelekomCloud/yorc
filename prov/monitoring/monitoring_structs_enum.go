// Code generated by go-enum
// DO NOT EDIT!

package monitoring

import (
	"fmt"
	"strings"
)

const (
	// CheckStatusPASSING is a CheckStatus of type PASSING
	CheckStatusPASSING CheckStatus = iota
	// CheckStatusCRITICAL is a CheckStatus of type CRITICAL
	CheckStatusCRITICAL
)

const _CheckStatusName = "PASSINGCRITICAL"

var _CheckStatusMap = map[CheckStatus]string{
	0: _CheckStatusName[0:7],
	1: _CheckStatusName[7:15],
}

func (i CheckStatus) String() string {
	if str, ok := _CheckStatusMap[i]; ok {
		return str
	}
	return fmt.Sprintf("CheckStatus(%d)", i)
}

var _CheckStatusValue = map[string]CheckStatus{
	_CheckStatusName[0:7]:                   0,
	strings.ToLower(_CheckStatusName[0:7]):  0,
	_CheckStatusName[7:15]:                  1,
	strings.ToLower(_CheckStatusName[7:15]): 1,
}

// ParseCheckStatus attempts to convert a string to a CheckStatus
func ParseCheckStatus(name string) (CheckStatus, error) {
	if x, ok := _CheckStatusValue[name]; ok {
		return CheckStatus(x), nil
	}
	return CheckStatus(0), fmt.Errorf("%s is not a valid CheckStatus", name)
}
