// Copyright 2019 Bull S.A.S. Atos Technologies - Bull, Rue Jean Jaures, B.P.68, 78340, Les Clayes-sous-Bois, France.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by tdt2go
// DO NOT EDIT! ANY CHANGES MAY BE OVERWRITTEN.

package datatypes

// SlurmExecutionOptions is the generated representation of yorc.datatypes.slurm.ExecutionOptions data type
type SlurmExecutionOptions struct {
	Root
	// If command is provided, this allows to define arguments passed to the command.
	Args []string `mapstructure:"args" json:"args,omitempty"`
	// Allows a job to run a command instead of a batch script if none is provided.
	Command string `mapstructure:"command" json:"command,omitempty"`
	// Environment variables to pass to the job execution.
	EnvVars []string `mapstructure:"env_vars" json:"env_vars,omitempty"`
	// List of options to be passed to sbatch as inline batch script options.
	// To be valid each element should start with a dash '#' character.
	InScriptOptions []string `mapstructure:"in_script_options" json:"in_script_options,omitempty"`
}

// SlurmJobOptions is the generated representation of yorc.datatypes.slurm.JobOptions data type
type SlurmJobOptions struct {
	Root
	// Charge resources used by this job to specified account. May be mandatory according to configuration.
	Account string `mapstructure:"account" json:"account,omitempty"`
	// Number of cpus allocated per task.
	CpusPerTask int `mapstructure:"cpus_per_task" json:"cpus_per_task,omitempty"`
	// This define all other slurm job options (ex: --mpi=pmi2 or --partition=MyPartition).
	ExtraOptions []string `mapstructure:"extra_options" json:"extra_options,omitempty"`
	// The memory per node required to the job.
	MemPerNode ScalarUnitSize `mapstructure:"mem_per_node" json:"mem_per_node,omitempty"`
	// The slurm job name.
	Name string `mapstructure:"name" json:"name,omitempty"`
	// Number of nodes allocated to the job.
	Nodes int `mapstructure:"nodes" json:"nodes,omitempty"`
	// Allocate resources for the job from the named reservation.
	Reservation string `mapstructure:"reservation" json:"reservation,omitempty"`
	// Number of tasks to run.
	Tasks int `mapstructure:"tasks" json:"tasks,omitempty"`
	// Set a limit on the total run time of the job allocation. Time formats include "minutes", "minutes:seconds", "hours:minutes:seconds", "days-hours", "days-hours:minutes" and "days-hours:minutes:seconds"
	Time string `mapstructure:"time" json:"time,omitempty"`
}
